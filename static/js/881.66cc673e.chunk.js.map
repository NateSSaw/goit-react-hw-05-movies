{"version":3,"file":"static/js/881.66cc673e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"list\":\"Movies_list__hqYjd\",\"list__item\":\"Movies_list__item__FCBCP\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/Api';\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const search = searchParams.get('name');\n    if (search === null) return;\n    getSearchMovie(search).then(resp => {\n      setSearchFilm(resp.results);\n    });\n  }, [searchParams]);\n\n  const updateQueryString = query => {\n    query.preventDefault();\n    const name = query.target.value.trim();\n    const nextParams = name !== null && { name };\n    setSearchParams(nextParams);\n  };\n  return (\n    <div>\n      <form className={css.form} onSubmit={event => event.preventDefault()}>\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={updateQueryString}\n        />\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {searchFilm.length > 0 ? (\n        <ul className={css.list}>\n          {searchFilm?.map(({ id, poster_path, title }) => (\n            <li key={id}>\n              <Link\n                to={`${id}`}\n                state={{ from: location }}\n                className={css.list__item}\n              >\n                <p> {title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'bf7825decf840602b483780e7dcd93f9';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nasync function getPopularMovie() {\n  try {\n    const response = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getSearchMovie(search) {\n  try {\n    const response = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&query=${search}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieById(search) {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${search}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport {\n  getPopularMovie,\n  getSearchMovie,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["Movies","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","search","get","getSearchMovie","then","resp","results","className","css","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","query","name","target","value","trim","length","map","id","title","poster_path","to","state","from","API_KEY","API_URL","getPopularMovie","axios","response","data","console","error","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}